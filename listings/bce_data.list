	COMPILATION LISTING OF SEGMENT !BBBJZjXlMzqBKb
	Compiled by: Multics PL/I Compiler, Release 32f, of October 9, 1989
	Compiled at: Bull HN, Phoenix AZ, System-M   
	Compiled on: 11/11/89  1036.5 mst Sat
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        6*   *                                                         *
        7*   *********************************************************** */
        8 /* BCE_DATA.CDS data for the Bootload Command Environment */
        9 /* BIM 8/82 */
       10 /* Modified by Keith Loepere various times in 83 for bce switches */
       11 /* format: style4,indattr,ifthenstmt,ifthen,idind33,^indcomtxt */
       12 
       13 bce_data:
       14      procedure;
       15 
       16 
       17 declare  create_data_segment_		  entry (ptr, fixed bin (35));
       18 declare  com_err_			  entry () options (variable);
       19 declare  code			  fixed bin (35);
       20 declare  PADSTAR			  (1) char (32) init ("pad*") int static options (constant);
       21 
       22 declare  1 bce_data_static		  aligned,
       23 
       24 /* bce switches--- these must be in entry-ptr order */
       25 
       26 	 2 console_put_chars	  entry,
       27 	 2 console_put_chars_data_ptr   ptr init (null),
       28 
       29 	 2 console_get_line		  entry,
       30 	 2 console_get_line_data_ptr    ptr init (null),
       31 
       32 	 2 console_alert_put_chars	  entry,
       33 	 2 console_alert_put_chars_data_ptr ptr init (null),
       34 
       35 	 2 get_line		  entry,
       36 	 2 get_line_data_ptr	  ptr init (null),
       37 
       38 	 2 put_chars		  entry,
       39 	 2 put_chars_data_ptr	  ptr init (null),
       40 
       41 	 2 error_put_chars		  entry,
       42 	 2 error_put_chars_data_ptr	  ptr init (null),
       43 
       44            2 exec_com_get_line	  entry,
       45 	 2 command_abs_data_ptr	  pointer init (null),
       46 
       47 /* miscelaneous */
       48 
       49 	 2 free_area_ptr		  pointer init (null),
       50 	 2 subsys_info_ptr		  pointer init (null),
       51 	 2 number_of_temp_segs	  fixed bin;
       52 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       53 
       54 declare  1 CDSA			  aligned like cds_args;
       55 declare  (null, size)		  builtin;
       56 
       57 
       58 	CDSA.sections (1).p = null ();
       59 	CDSA.sections (1).len = 0;
       60 	CDSA.sections (2).p = addr (bce_data_static);
       61 	CDSA.sections (2).len = size (bce_data_static);
       62 	CDSA.sections (2).struct_name = "bce_data_static";
       63 	CDSA.seg_name = "bce_data";
       64 	CDSA.num_exclude_names = 1;
       65 	CDSA.exclude_array_ptr = addr (PADSTAR);
       66 	CDSA.have_static = "1"b;
       67 	CDSA.switches.have_text = "0"b;
       68 	call create_data_segment_ (addr (CDSA), code);
       69 	if code ^= 0
       70 	then call com_err_ (code, "bce_data");
       71 	return;
       72      end bce_data;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/11/89  0837.1  !BBBJZjXlMzqBKb.pl1               >special_ldd>install>MR12.3-1114>bce_data.cds
53           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CDSA                            000162 automatic       structure                level 1 dcl 54 set ref 68 68
PADSTAR                         000000 constant        char(32)                 initial array packed unaligned dcl 20 set ref 65
bce_data_static                 000102 automatic       structure                level 1 dcl 22 set ref 60 61
cds_args                               based           structure                level 1 dcl 1-3
code                            000100 automatic       fixed bin(35,0)          dcl 19 set ref 68* 69 69*
com_err_                        000014 constant        entry                    external dcl 18 ref 69
command_abs_data_ptr     50     000102 automatic       pointer                  initial level 2 dcl 22 set ref 22*
console_alert_put_chars_data_ptr
                         20     000102 automatic       pointer                  initial level 2 dcl 22 set ref 22*
console_get_line_data_ptr
                         12     000102 automatic       pointer                  initial level 2 dcl 22 set ref 22*
console_put_chars_data_ptr
                          4     000102 automatic       pointer                  initial level 2 dcl 22 set ref 22*
create_data_segment_            000012 constant        entry                    external dcl 17 ref 68
error_put_chars_data_ptr
                         42     000102 automatic       pointer                  initial level 2 dcl 22 set ref 22*
exclude_array_ptr        42     000162 automatic       pointer                  level 2 dcl 54 set ref 65*
free_area_ptr            52     000102 automatic       pointer                  initial level 2 dcl 22 set ref 22*
get_line_data_ptr        26     000102 automatic       pointer                  initial level 2 dcl 22 set ref 22*
have_static              44(03) 000162 automatic       bit(1)                   level 3 packed packed unaligned dcl 54 set ref 66*
have_text                44(02) 000162 automatic       bit(1)                   level 3 packed packed unaligned dcl 54 set ref 67*
len                       2     000162 automatic       fixed bin(18,0)          array level 3 dcl 54 set ref 59* 61*
null                                                   builtin function         dcl 55 ref 22 22 22 22 22 22 22 22 22 58
num_exclude_names        40     000162 automatic       fixed bin(17,0)          level 2 dcl 54 set ref 64*
p                               000162 automatic       pointer                  array level 3 dcl 54 set ref 58* 60*
put_chars_data_ptr       34     000102 automatic       pointer                  initial level 2 dcl 22 set ref 22*
sections                        000162 automatic       structure                array level 2 dcl 54
seg_name                 30     000162 automatic       char(32)                 level 2 dcl 54 set ref 63*
size                                                   builtin function         dcl 55 ref 61
struct_name               3     000162 automatic       char(32)                 array level 3 dcl 54 set ref 62*
subsys_info_ptr          54     000102 automatic       pointer                  initial level 2 dcl 22 set ref 22*
switches                 44     000162 automatic       structure                level 2 dcl 54

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array packed unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
bce_data                        000021 constant        entry                    external dcl 13

NAME DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 60 65 68 68

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       174         212     121         204
Length      1454     121        16        1226      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
bce_data                            170 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
bce_data                 000100 code                        bce_data
                         000102 bce_data_static             bce_data
                         000162 CDSA                        bce_data

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000020        22 000026        58 000040        59 000041        60 000042        61 000044        62 000046
     63 000051        64 000054        65 000056        66 000060        67 000062        68 000064        69 000076
     71 000117


Object Segment >special_ldd>install>MR12.3-1114>bce_data
Created on 11/11/89  1036.6 mst Sat
by Hirneisen.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0       0     236     326     246
Length     515       0     236      70     153      60


19 Definitions:


segname:    bce_data

link|60         command_abs_data_ptr
link|24         console_alert_put_chars
link|30         console_alert_put_chars_data_ptr
link|16         console_get_line
link|22         console_get_line_data_ptr
link|10         console_put_chars
link|14         console_put_chars_data_ptr
link|46         error_put_chars
link|52         error_put_chars_data_ptr
link|54         exec_com_get_line
link|62         free_area_ptr
link|32         get_line
link|36         get_line_data_ptr
link|66         number_of_temp_segs
link|40         put_chars
link|44         put_chars_data_ptr
link|64         subsys_info_ptr
symb|0          symbol_table


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
