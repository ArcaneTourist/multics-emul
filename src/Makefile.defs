# Copied from ../Makefile

# CC Command
#
# Note: -O2 is sometimes broken in GCC when setjump/longjump is being
# used. Try -O2 only with released simulators.
#
ifeq ($(WIN32),)
#Unix Environments
ifeq ($(OSTYPE),solaris)
OS_CCDEFS = -lsocket -lnsl -lpthread -D_GNU_SOURCE
else
OS_CCDEFS = -D_GNU_SOURCE
endif
ifeq ($(OSTYPE),macos)
CC = gcc -std=c99 -O2 -U__STRICT_ANSI__ -g $(OS_CCDEFS) -I ../simh
LDFLAGS=-lm -lrt
else
# linux needs librt
#CC = gcc -std=c99 -O3 -U__STRICT_ANSI__ -g $(OS_CCDEFS) -I .
CC = gcc -std=c99 -pedantic -O3 -Wall -Wno-unused-variable -march=native -pipe -DUSE_INT64 -DUSE_ADDR64 -U__STRICT_ANSI__ -g $(OS_CCDEFS) -I ../simh
# optimizing
CXX = g++ -pedantic -O3 -Wall -Wno-long-long -Wno-unused-variable -march=native -pipe -DUSE_INT64 -DUSE_ADDR64 -U__STRICT_ANSI__ -g $(OS_CCDEFS) -I ../simh
# debugging, remove optimization
# CXX = g++ -pedantic -O0 -Wall -Wno-long-long -Wno-unused-variable -march=native -pipe -DUSE_INT64 -U__STRICT_ANSI__ -g $(OS_CCDEFS) -I ..
LDFLAGS=-lm -lrt -lgmp
# Solaris
# sol: OS_CCDEFS = -D_GNU_SOURCE
# sol: OS_LDDEFS = -lsocket -lnsl -lpthread
# sol: CC = gcc -std=c99 -pedantic -O3 -Wall -Wno-unused-variable -pipe -DUSE_INT64 -DUSE_ADDR64 -U__STRICT_ANSI__ -g $(OS_CCDEFS) -I ..
# sol: CXX = g++ -pedantic -O3 -Wall -Wno-long-long -Wno-unused-variable -pipe -DUSE_INT64 -DUSE_ADDR64 -U__STRICT_ANSI__ -g $(OS_CCDEFS) -I ..
# sol: LDFLAGS=$(OS_LDDEFS) -lm -lrt -lgmp
endif
ifeq ($(USE_NETWORK),)
else
# NETWORK_OPT = -DUSE_NETWORK -isystem /usr/local/include /usr/local/lib/libpcap.a
#NETWORK_OPT = -DUSE_NETWORK /usr/lib/libpcap.so.0.9
NETWORK_OPT = -DUSE_NETWORK -lpcap
endif
else
#Win32 Environments
LDFLAGS = -lm -lwsock32 -lwinmm
CC = gcc -std=c99 -U__STRICT_ANSI__ -O0 -I..
EXE = .exe
ifeq ($(USE_NETWORK),)
else
NETWORK_OPT = -DUSE_NETWORK -lwpcap -lpacket
endif
endif

