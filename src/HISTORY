History of pre-release versions
    Constructed via diffs of saved copies

=== Pre-Version 01 01/04/2008
    No code other than pseudo code used in notes

=== Pre-Version 02 01/07/2008
    Expanded notes
    hw6180.h:
        define instr_t, IR_t, fault_reg_t, ctl_unit_data_t, bitval36()
    hw6180.c:
        initial sketch of sim_instr() with call to control_unit()
        initial control_unit() in pseudo code

=== Pre-Version 03 01/07/2008
    hw6180.h:
        enums addr_modes_t, instr_modes_t
    hw6180.c:
        some expansion of control_unit(), but much is still pseudo code
        and not compilable

=== Pre-Version 04 01/08/2008
    hw6180.h: fix bitval36(), add bitset36(), bitclear36()

=== Pre-Version 05 01/11/2008
    General
        First compilable version
    Add Makefile
    Updates to notes
    hw6180.h
        Add uint type as an efficent int that is at least 32 bits in size
        Add cycles_t, enum faults, enum sim_stops, cpu_state_t, events_t,
            PPR_t, TPR_t, switches_t
        Add getbits36()
        Add TPR_TRR, TPR_TSR, IC, CA, CT_HOLD to ctl_unit_data_t
    hw6180_cpu.c
        Add structures for SIMH
        Add cpu_boot() to load tape
        Function control_unit() fleshed out
        Function fault_gen() translated from pseudo code to real code
        Added set_addr_mode(), get_addr_mode(), fetch_instr(), fetch_word(),
            fetch_pair(), decode_instr(), decode_ypair_addr(), 
            decode_addr(), 
    misc.c: initial version with debug_msg()
    opcode_text.c: initial version
    opcodes.h: initial version
    opcodes0.txt: initial version
    opcodes1.txt: initial version
    opcodes2c.pl: initial version
    opu.c: initial version
        Provided execute_instr() and do_op(); only instruction is "xed"

=== Pre-Version 06 01/14/2008
    General
        Loads first block of tape image into memory (by reading directly
        from the boot tape file, not via a simulated tape drive).
    bits.h: initial version
    bits.c: initial version
    hw6180_cpu.c: load first block of tape image into memory
    opcodes.h: switch from opcode_XXX to opcode0_XXX and opcode1_xxx
    opcodes2c.pl: switch from opcode_XXX to opcode0_XXX and opcode1_xxx
    opu.c: Add a second instruction, ADX1.

=== Pre-Version 07 01/14/2008
    apu.c
        Initial version
        Moved set_addr_mode(), get_addr_mode(), decode_ypair_addr() from hw6180_cpu.c
        Initial version of addr_mod() -- pseudo code for non absolute mode
    hw6180.h:
        Added overflow_fault
        Modifications to IR_t
        Fix to getbits36()
        Added setbits36()
    hw6180_cpu.c
        Moved some routines to new file, apu.c
        Expansion of fault handling
    opcodes0.txt: corrected spelling of "rpt"
    opu.c
        Added call to addr_mod()
        Expanded opcodes implemented from two to forty-three.
    scan-tape.c
        Initial version.  Utility to dump tape.

=== Pre-Version 08 01/17/2008
    General
        Added an SCU, and support for defining how components are wired to SCU
        Added a timer and related LDT instruction
        Added PTWAM, SDWAM
        added store_fault
    scu.c
        Initial version
    apu.c
        Implemented register mode (r) modification
    hw6180_cpu.c
        Added cancel_run()
        Improved fault handling re prioritization etc
    hw6180_sys.c
        Use cpu_port and scu_ports to define how components are wired together
        Support for a timer
    opu.c
        More instructions

=== Pre-Version 09 01/18/2008
    General
        Added div_fault
        Added IR flag tally_runout
    hw6180_cpu.c
        Cleanup handling of instructions at odd locations
    opu.c
        More instructions including 72bit addition

=== Pre-Version 10 01/20/2008
    General
        Added an IOM and related CIOC, SMCM instructions
        Still working on executing bootload_tape_label.alm  
        Added f1_fault
        Added memory breakpoints
    hw6180_sys.c
        Made A, Q, E, X, IR, TR registers visible to SIMH
        Modifications to structures for SCU interconnectivity
        Seperate routines for iom and iox memory initialization
    iom.c
        Initial version -- just debug dump of mailboxes
    opu.c
        More instructions
        Created add18()
    scu.c
        Changes to scu_set_mask()
        Added clock
    
=== Pre-Version 11 01/23/2008
    General
        Support SIMH memory examination and deposit
    iom.c
        Initial version of list service, PCW and DCW handling 

=== Pre-Version 12 01/26/2008
    General
        A tape drive
        IOM work
    hw6180_cpu.c
        Use SIMH tape routines instead of our own code
    iom.c
        Updates to PCW and DWC handling
    mt.c
        Initial version

=== Pre-Version 13 01/27/2008
    General
        IOM work -- not compilable
    iom.c
        Chages to fault handling
        Initial CIOC in iom_interrupt() now loops until tally run out
        Reworked list_service()

=== Pre-Version 14 01/27/2008
    General
        IOM work
    hw6180_sys.c
        Corrections to initial memory contents
    iom.c
        Much changed
    mt.c
        Implementation of actual reads
    opu.c
        Correction of many instructions that use the lower 3 bits of
        the CA as an index into X[] or as a value

=== Pre-Version 15 02/07/2008
    apu.c
        Add "IT" addressing mode
    hw6180_cpu.c
        Fix examine routine for SIMH to match SIMH code (SIMH docs wrong)
    iom.c
        After first list service, do a PCW if appropriate
        Changes to channel handling, PCW loop control
        Changes to looping in list_service()
        Inital version of status service
    mt.c
        Corrections to status codes

=== Pre-Version 16 02/08/2008
    iom.c
        Add looping to do_channel()

=== Pre-Version 17 02/17/2008
    hw6180.h
        Changes to address representation
        New type AR_PR_t to replace seperate AR[] and PR[] register arrays
        New type DSBR_t
    apu.c
        Code moved from addr_mod() to compute_addr()
        addr_mod() now loops
        Handling of PR bit (ptr reg flag)
    bits.c
        Corrections to detect stream exhaustion
    iom.c
        Changes to when extra list service is requested in do_channel()
        Send I/O requests to devices
    mt.c
        Initial version of mt_iom_io() to read and return records
        Remember state; Use bitstm
    opu.c
        Instructions related to VM such as LDBR and EPP*

=== Pre-Version 18 02/19/2008
    hw6180.h
        Change handling of values produced by CA
    apu.c
        Various tweaks to CA cycle
        Implemented RI addr mod

=== Pre-Version 19 02/22/2008
    General
        Not compilable
    apu.c
        Enter appending mode if PR flag set
        Implementation of ESN segmentation (the portion of AL39 figure 6-10 that is below the "CA CYCLE" box)
        Changes to looping in CA cycle
    opu.c
        Only change addressing mode for transfer instructions

=== Pre-Version 20 02/25/2008
    General
        Appending mode and Hardware virtual memory
    apu.c
        ITS/ITP
        Hardware virtual memory (See AL39, figure 5-4)
        Remove do_esn_segmentation()

=== Pre-Version 21 02/26/2008
    General
        Examine execution of bootload_abs_mode.alm
    apu.c
        More work on VM
    hw6180_sys.c
        Examine formatting for PTWs and SDWS

=== Pre-Version 22 02/29/2008
    General
        Start to handle EIS multi-word instructions
        Examination of bootload_0.alm and bootload_io.alm
    hw6180.h
        Added eis_mf_t for handling MF fields of EIS multi-word instructions
    apu.c
        Initial versions of parse_mf(), fetch_mf_ops(), fix_mf_len(),
        get_mf_an_addr(), etc
    opu.c
        Initial implemention of mlr, a multi-word instruction.  Not all options supported.

=== Pre-Version 23 02/29/2008
    General
        Examination of bootload_flagbox.alm
    hw6180_sys.c
        Corrected memory init
        Added address parsing for SIMH for segmented addresses
    opu.c
        Added instructions and re-arranged

=== Pre-Version 24 03/06/2008
    General
        Examination of bootload_console.alm and bootload_slt_manager.alm
    math.c
        Initial version
    hw6180_cpu.c
        IR expanded from 14 bits to 18 bits (only 14 or 15 valid)
        Added routines for handling Y-block stores and loads
    opu.c
        Added instructions
        Enhanced mlr; added cmpc
    apu.c
        Handle modifiers for MF fields of EIS multi-word instructions
        fix_mf_len() now takes a nbits arg
        Don't stomp TPR in get_mf_an_addr() while determing the absolute
        address for an  EIS operand in Alphanumeric Data Descriptor Format
        Improved handling of RI addr mod and ITS/ITP

=== Pre-Version 25 03/06/2008
    General
        Added console support
        Examination of bootload_error.alm
    console.c
        Initial version
    opu.c
        Added instructions

=== Pre-Version 26 03/08/2008
    General
        Examination of bootload_formline.alm
    opu.c
        Call addr_mod_eis_addr_reg() for instr a9bd
        Instructions sbx* use low bits of operand
        Move mlr code to op_mlr()
        Pass bitno arg to get_mf_an_addr()
        Handle mlr instructions where n1!=n2 or lengths are partial words
        Added instructions
        Correct add18() to properly handle setting zero flag and negative flag on overflow
    apu.c
        Handle more MF modifications
        Initial version of addr_mod_eis_addr_reg() for setting AR[] and PR[]
        registers for selected instructions (initially just a9bd).
    hw6180_cpu.c
        Update fetch_yblock() and store_yblock() to support both aligned and unaligned blocks


=== Pre-Version 27 03/09/2008
    General
        Added generalized routines for handling EIS descriptors to be used
        in the implementation of multiple EIS instructions
    hw6180.h
        Added eis_alpha_desc_t
    apu.c
        Initial version of get_eis_an() to return a single char via an EIS descriptor.
        Initial version of parse_eis_alpha_desc() to return the absolute
        address for EIS operands in Alphanumeric Data Descriptor Format
        Initial version of mf2text(), eis_alpha_desc_to_text()
    opu.c
        Re-implemented mlr to use new EIS descriptor handling routines

=== Pre-Version 28 03/10/2008
    apu.c
        Updates re fetching EIS operands via MF fields
    opu.c
        Fix to MLR re fill value

=== Pre-Version 29 03/11/2008
    apu.c
        Seperate out get_address() from get_mf_an_addr() for use in
        new get_eis_indir_addr()
    opu.c
        Fix add36() re IR settings after overflow
        Implemented TCT multi-word instruction.

=== Pre-Version 30 03/14/2008
    apu.c
        Rework get_eis_an() and put_eis_an().

=== Pre-Version 31 03/15/2008
    hw6180.h
        Change CA in TPR from 64bit type to 32bit type (holding 18bit values)
    apu.c
        Tweak to handling of a9bd and other EIS functions to sign extend
        the 18bit CA
    opu.c
        Implement MVT multi-word instruction.

=== Pre-Version 32 03/17/2008
    apu.c
        Initial get_eis_an_rev() for EIS instructions that need to process
        blocks of data in reverse.
        Special handling for STCA
    opu.c
        Update to STCA.
        Set AR/PR bitno/charno for lpri
        Update op_tct() to do both TCT and TCTR.

=== Pre-Version 33 04/06/2008
    apu.c
        Handle AU in EIS MF fields
        Fixes to get_eis_an_rev()
        Update get_address() to do register modification
    iom.c
        The "for foo" hack (later removed).
        Support console I/O
        Update to DDCW looping
    opu.c
        Add LDI, SBLX*
        Updates re checking for priviledged mode

=== Pre-Version 34 04/06/2008
    General
        Investigation of problem in tape read loop

=== Pre-Version 35 06/02/2008
    General
        Move EIS code out of apu.c
        Determine that tape problem is related to using word counts instead
        of char counts.

=== Pre-Version 36 06/14/2008
    General
        Examine bootload_early_dump
        Added symbol table; initial version tracks addresses vs source files
        Re-work apu.c split to create eis_mw_desc.c
    console.c
        Cleanup state tracking
    mt.c
        Handling of tape marks and EOM
    opu.c
        Correctly set zero flag for sblx*
        Add instructions

=== Pre-Version 37 06/14/2008
    General
        No code changes

=== Pre-Version 38 10/05/2008
    General
        Very minor code changes
        Analysis of code flow of call from bootload_tape_fw$boot to
        skip_collection and why tape data isn't transferred.

=== Pre-Version 39 10/13/2008 -- lost
    iom.c
        Modifications to the IOM for debugging and to parse DCWs into a
        structure.

=== Pre-Version 40 10/13/2008 --- lost
    iom.c
        Re-work looping mechanisms.  Remove "for foo" hack.  Instead, the
        payload channels will request an indirect data service after any
        I-DCW involving a data transfer.  The indirect data service is
        implemented as just an additional list service call, but that
        seems sufficient.

=== Pre-Version 41 10/22/2008
    General
        Restore from pre-version 38
        Notes and pseudo-code for the rpt instruction.

=== Pre-Version 42 10/22/2008
    iom.c
        Modifications to the IOM to parse DCWs into a structure.
        Re-work looping mechanisms.  Remove "for foo" hack.  Instead, the
        payload channels will request an indirect data service after any
        I-DCW involving a data transfer.  The indirect data service is
        implemented as just an additional list service call, but that
        seems sufficient.


=== Pre-Version 43 10/27/2008
    General
        The bootload_loader.alm will fault executing the cams instr in
        non-absolute mode.  It isn't legal to execute cams in non absolute
        mode, but  bootload_loader.alm only skips the cams instruction if
        the system_type is two.  The value for system_type is determined
        by bootload_tape_label.alm based on the contents of memory location
        zero.  A non-zero value for system_type indicates the presence of
        an IOX rather than an IOM.  So, the IOM will need to be replaced
        by an IOX.
    cpu.c
        Dump history of changed registers after each instruction.
        Handling of the "rpt" repeat instruction.
    opu.c
        Handling of the "rpt" repeat instruction.
        Fixed easp* instructions to work on the correct registers (not opcode&07).

=== Pre-Version 44 Nov 12, 2008
    General
        Use the IOM/IOX to read the first tape record.  Fixes to repeat
        instructions re the instruction tag and X[n] updating.  Updated
        parse_addr() to handle expressions involving pr registers.
    opu.c
        Repaired adlaq and sbaq.    
        Added sti, asxn, anxn, 0epbpn, sprpn, rsw, trtn.
        Don't fault on cams in absolute mode -- the boot tape wants to do
        this when using an IOM.
    iom.c
        Handle a DDCW tally of zero as 010000.  Updates to status returns.
    mt.c
        Add BSR (back space record).  No longer return an error when out of
        data.  Instead return a 4000 all-clear which bootload_tape_label.alm
        seems to assume, but also return an out-of-band non-zero status to
        the IOM to make it stop.

=== Pre-Version 45, Nov 16, 2008
    General
        Diag tape indicates a need for invalidation of the cached odd
        instruction after a write.   Added various indicators to make diag
        tape happy:  exp overflow, exp underflow, parity mask, parity error.
    mt.c
        Updated status codes from tape subsystem.
    opu.c
        Made a guess at what rsw should do for an effective address of xxxxx0.
        Rsw for xxxxx0 also now claims the cache is enabled.

=== Pre-Version 46, Nov 18, 2008
    General
        Remove TPR_t's bitno, use TPR_t's TBR instead.
        Updates to bit offset addressing.
        Changes to message logging re levels and history.
    opu.c
        Updates re 18-bit to 36-bit promotions
        Add opcodes lprpN.  Fixes to ldbr, sdbr, cams, camp
        
=== Pre-Version 47, Nov 24, 2008
    apu.c
        Fix on ",du" and ",dl" modes
    opu.c
        Investigation of setting IR based on 18-bit math results rather
        than 36-bit results (based on unexpected behavior with diag tape).
        Update to sbq.  IR fixes to ora, oraq, orq, orxN.  Fix to canxN.
        Change dis to halt instead of noop.

=== Pre-Version 48, Nov 25, 2008
    eis_mw_desc.c
        Fix bug re truncation of descriptor counts

=== Pre-Version 49, Dec 2, 2008
    apu.c
        Public get_address() returns a min/max validity range for
        callers that want to loop over memory without translating
        every sequential address.
    eis_mw_desc.c
        Many changes.  Apparent fixes for bit addressing, reverse
        descriptors, and paged segments.
    hw6180.h
        Changes to EIS descriptor data structures.
    iom.c
        Initial support for transfer type DCWs (logging not functionality).
    opu.c
        Move spri* to function.
        Add: spl, spri*
        mlr: flush partial results on error

=== Pre-Version 50, Dec 4, 2008
    General
        Updates to debug messages
    hw6180_cpu.c
        Don't auto-attach tape
    hw6180_sys.c
        Don't default debugging to on
        Allow either '#' or '=' to specify absolute addressing mode ('=' is not allowed by the SIMH parser)
    opu.c
        Bug fix to spri instr.

=== Pre-Version 51, Dec 5, 2008
=== Pre-Version 52, Dec 11, 2008
=== Pre-Version 53, Dec 13, 2008

=== Pre-Version 54, Dec 14, 2008
    General
        Updates to debug messages
        Rename cpu.xfr to cpu.trgo
    cpu.c
        fetch
        Add fault_check() and fault_check_group()
        Update re cache invalidation
    opu.c
        Bug fix for lls; add lrs, cmk, call6, rtcd, tspX, spbpX
        Update to cams
=== Pre-Version 55, Dec 18, 2008
    General
        Support for bitstring instructions
    apu.c
        Updates to debug msgs
        Changes to reg_mod_x() and register_mod() to support returing
        bit offset.
    eis_mw_desc.c
        Added support for bit descriptors.
        Updates re bit position within a word.
        Possibly other changes re descriptors.
    opu.c
        Added lca, lcq, stcq, lrl, adlq, asq, ttf, adwpX, scm, csl
        Fixes to some shifts
=== Pre-Version 56, Dec 19, 2008
    apu.c
        Updates to messages
    eis_mw_desc.c
        Updates re bitno position in descriptors
    cpu.c
        Don't do startup fault for unusual FLT_BASE settings
        Add cu.instr_fetch flag
        Fix for location of fault vector
    opu.c
        Fix to rsw
        Disable auto-breakpoint on xed for non-standard FLD_BASE
=== Pre-Version 57, Dec 23, 2008
    General
        Investigation of diag tape's 18-bit oddity
    apu.c
        Updates to get_address() which is used for EIS instructions
        Fixes re DSBR bounds handling
    cpu.c
        Added cu_safe_store() and other tweaks to fault handling.
    sys.c
        Added memory write breakpoints
    iom.c
        Fixes to status words
    opu.c
        Changes to messages re address mode being changed by an operand
        Fix to lreg and fld for reg E
        Added tss, sbar, lbar, scu
        Fix to absa
        Debugging re adding ,dl operands
=== Pre-Version 58, Feb 15, 2009
    General
        Examining the name table and pre-linking.
        Display IR symbolically.  Allow SIMH to display PR registers.
=== Pre-Version 59, Apr 27, 2009
    General
        Create cpu_t and move PTWAM, SDWAM, and DSBR there.
        Implement save/restore
        Add xseginfo and xfind commands
        Notes on the config deck
=== Pre-Version 60, Apr 29, 2009
    General
        Updates to location tracking.
        Figure out rsw 0 and fix.
        After adding commands to dump the linkage sections, found that the
        xec to an empty word is from bound_priv_1$read_mask.  That's a very
        short ALM routine, all of which is listed here:
            read_mask:
            inhibit on      <+><+><+><+><+><+><+><+><+><+><+><+>
            lxl1    prds$processor_tag
            lprpab  scs$mask_ptr,1
            xec     scs$read_mask,1
            inhibit off     <-><-><-><-><-><-><-><-><-><-><-><->
            staq    ap|2,*
            short_return
        So, the issue is that the simulator is not preparing a config deck
        to be loaded into the SCS segment.
=== Pre-Version 61, May  3, 2009
    General
        Updates to source tracking
        Add source line debugging
        Run compiler with -pedantic flag
=== Pre-Version 62, May  3, 2009
        Updates to source tracking
=== Pre-Version 63, May  4, 2009
        Updates to source tracking
=== Pre-Version 64, May  6, 2009
    Log file
        -rw-r--r--  1 mdm mdm       401276 May  6 00:03 log66
    General
        Explore crash near cv_config_card_
        Add per-segment debugging
        Add opcodes: adl, ersq
        Fix to TRO for tct
=== Pre-Version 65, May 14, 2009
    General
        Explore initializer$initializer call to collection_1
        Minor update to per-segment debugging
=== Pre-Version 66, May 17, 2009
    Log file
        -rw-r--r--  1 mdm mdm      1613303 May 17 11:09 .ltmp15
        -rw-r--r--  1 mdm mdm      2105344 May 29 02:21 .l.old
    General
        Explore attempt to use null ptr after failure of config_$find to find
        previously created "mem" card.
        Handle opcode abd.
        Fix adwpxN to update correct PR.
        Minor update to cams.
        Implement opcodes rscr, rsw, cmpb
=== Pre-Version 67, May 29 2009 (with minor mod on Aug  1, 2009)
    Log file
         -rw-r--r--  1 mdm mdm      2105344 May 29 02:21 .l.old
    General
        Fix usage of tag bits for opcode stcq
        Fix rscr bit 50/51
        Handle addressing of stcq, stba, stbq, and lcpr
        Fix register E to be 8 bits wide
        Fix to execution of xed
        Updates to source level debugging
        Updates to type flag handling of memory dumps
        Updates to math.c: fixes to mpy(), add mpy72fract(), div72()
        Implement or partially implement: lcxN, stba, stbq, adaq, dvf, fad, ufa, fmp, lde
        Fix to negate72()
        Update sscr

=== Pre-Version 68, Sep 17
    Log file
        -rw-r--r--  1 mdm mdm      2109207 Sep 17 22:31 .ltmp37new
    General
        Move some fixed point instruction support from opu.c to math_real.c and update.
            instr_dvf(), instr_ufa(), instr_ufm(), instr_fno(), multics_to_double()

=== Pre-Version 69, Oct  2, 2009
    General
        Update listing.c to track automatic (stack) variables.  No support in symtab/syminfo though.
        Use C++ for re-work of symtab/seginfo
=== Pre-Version 70, Oct 12, 2009
    General
        Updates to seginfo.h and seginfo.cpp for re-worked segment info tracking.
=== Pre-Version 71, Oct 13, 2009
    General
        Moved fixed point support from opu.c to math_real.c
        Updates to source tracking
=== Pre-Version 72, Oct 14, 2009
    General
        Update xlist source listing to automatically detect relocation amount,
        so user doesn't have to figure that out.
=== Pre-Version 73, Oct 17, 2009
    General
        Begin to track changes to automatic (stack based) PL/1 variables
=== Pre-Version 74, Oct 25, 2009
    General
        Updates for C++ compatibility to opcodes2c.pl
        More work on tracking automatic variables
        Move stack tracking support from hw6180_cpu.c to debug_*.cpp
        Update listing.cpp to see stack frames.
        Update seginfo.cpp to handle stack frames and automatic variables.
        Remember first name of segments with multiple names instead of the last seen.
    Math_real.c
        Finish fno instruction

=== Pre-Version 75, Oct 30, 2009
    General
        Implemented fno, ufm, btd, and mvne.  This includes support for EIS
        numeric descriptors and MOP editing micro operations..
    hw6180.h
        Support for EIS numeric descriptors
    eis_mw_desc.c
        Support for EIS numeric descriptors
    opu.c
        Implemented fno, ufm, btd, and mvne
    math_real.c
        Implemented ufm
        Corrected debug output of multics_to_double()
    console.c
        Temporarily disable sending of control chars to the console because
        current execution is spewing garbage on the console.

=== Pre-Version 76, Nov 3, 2009
    General
        Changes to debug output.
    debug_io.cpp
    debug_run.cpp
    eis_mw_desc.c
        Changes to debug msgs.  Update re a9bd instr.
    opu.c
        Created log_right_shift(); implement dfst, fst, dfcmp, s9bd
        Fix to add72() re carry
        Updates re EIS descriptors
    scu.c
        Fix to calendar
    
=== Pre-Version 77, Nov 8, 2009
    General
        Updates to: debug_run.cpp, hw6180_cpu.c, opu.c, scu.c
    hw6180_cpu.c
        Changes to statistics and debug displays
    opu.c
        Cleanup code for handling generation of bad its pointers
        Update to rsw, absa, long_right_shift()

=== Pre-Version 78, Nov 8, 2009
    apu.c
        PPR privileged flag changes on instruction fetch to match TPR
    hw6180_sys.c
        Changes to simulated cabling to match requirements seemingly implied by scas_init.
    opu.c
        Implement the privleged requirement for many instructions.

=== Pre-Version 79, Nov 8, 2009
=== Pre-Version 80, Nov 9, 2009
=== Pre-Version 81, Nov 11, 2009
=== Pre-Version 82, Nov 14, 2009
=== Pre-Version 83, Nov 15, 2009
=== Pre-Version 84, Nov 16, 2009
=== Pre-Version 85, Nov 21, 2009
=== Pre-Version 86, Nov 22, 2009
=== Pre-Version 87, Nov 23, 2009
=== Pre-Version 88, Nov 23, 2009
=== Pre-Version 89, Dec 7, 2009
=== Pre-Version 90, Dec 7, 2009
=== Pre-Version 91, Dec 7, 2009
=== Pre-Version 92, Dec 8, 2009
=== Pre-Version 93, Dec 9, 2009
=== Pre-Version 94, Dec 9, 2009
=== Pre-Version 95, Dec 11, 2009
=== Pre-Version 96, Dec 13, 2009
=== Pre-Version 97, Dec 17, 2009
=== Pre-Version 98, Dec 17, 2009
=== Pre-Version 99, Dec 20, 2009
=== Pre-Version 100, Dec 21, 2009
=== Pre-Version 101, Dec 30, 2009
=== Pre-Version 102, Dec 30, 2009
=== Pre-Version 103, Jan 5, 2010
=== Pre-Version 104, Jan 27, 2010

=== Pre-Version 105, Feb 22, 2010
    General
        Fix to overflow indication on negation of max neg
        Add opcodes negl, erx*
        Floating point work: Add fdv and equalize mantissas in opcodes
        dfcmp and fcmp

=== Pre-Version 106, Jul 20, 2010
    General
        Cosmetic tweaks for new warnings from new compiler version

=== Pre-Version 107, Mar 8, 2011
    General
        Verified that no extra symbol table info, e.g., for
        automatics is loaded from tape.
    General
        Added auto-input capability for operator's console, to
        allow ini file to specify interactive boot parms.  This
        included an update to handling of device specific data
        in the IOM.
        Revamped tracking of the stack and its automative variables.
        Added opcode mvn.  Fix to opcode btd.  Added opcode dtb.
        Fix for IC handling after XED of EIS multi-word instruction.
        Updated listing parser to do some type parsing of automatics.
        Implemented opcodes ade, fszn, ste

=== Pre-Version 108, Mar 17, 2011
    General
        No code changes
        Replace most occurances of "BUG" with "FIXME"
        Rename seginfo.h to seginfo.hpp
        Expect simh headers to be in ../simh/, not ../

=== Pre-Version 109, June 10, 2011
    EIS instructions
        Fix to btd
        Fixes for padding on MOP puts to only pad digits, not blanks and
        other specials.
        Initial look at dv3d

=== Pre-Version 110, June 12, 2011
    EIS instructions
        Support indirect descriptors
        Fix for handling 4 bit data (8 4-bit nibbles per word, not 9).

=== Pre-Version 111, June 21, 2011
    EIS instructions
        Generalize mvn's output logic for use by other EIS decimal
        instructions.
        Use a generalized decimal input function.
        Add dv3d, divide decimal with three operands.  Uses decNumber library.
        Valgrind reports a couple of false positives on unitialized Mem[]
        accesses after call to fetch_abs_word in desc_t::_get().

=== Pre-Version 112, June 25, 2011
    General
        Rename M[] to *Mem.
        Add support for warning re reads of uninitialized memory.

=== Pre-Version 113, Jun 25, 2011
    EIS instructions
        Remove eis_desc_t and use desc_t abstract base class instead.

=== Pre-Version 114, Jun 25, 2011
    General
        Cleanup some source comments and logging.
        Review auto breakpoints
        Enhance listing.cpp to handle entry points within
        procedures for automatic variable handling.

=== Pre-Version 115, Jul 13, 2011
    disk.c -- Initial (non-working) support for disk devices.

=== Pre-Version 116, Nov 29, 2011
    Disk
        disk.c -- initial (non-working) disk_iom_io()
        iom.c -- call disk_iom_io() when appropriate.

=== Pre-Version 117, Jan 07, 2012
    General
        Fixes to ORA and ORAQ instructions.
        More correct handling of IOM address extension in LPWs and DCWs.
        Simulator seems to properly create and handle faults as expected
        by init_root_vols$init_root_vols and children.
        Missing opcode: "ret".
    opu.c
        Fix ORA and ORQ to properly set IR.
    iom.c
        Move LPW into scratchpad.  Don't reload from memory on every list svc.
        Handle EC (address extension) bit in DCWs
    apu.c
        Added dump_descriptor_table for interactive use via cmd xvmdump
    debug_run.cpp
        Display stack depth on source line outputs; minor tweak to automatic
        var frame detection
    hw6180_cpu.c
        Don't warn about accessing uninitialized memory during searches.
    misc.c
        Break scan_seg_defs() into multiple functions.
        Provide get_seg_name(segno).
        Fix search to handle the packed addresses we give SIMH.

=== Pre-Version 118, Jan 07, 2012
    Opcode "ret"

=== Pre-Version 119, Dec 08, 2012
    Cleanup for putting parent folder and prior backups into version control.
    Remove Makefile.defs.
    Expect sources to be in ./src/ instead of current aka ./HW6180/.
    Move source listings from /src/ to ./listings/.
    Provide "xstats" command to display how often each instruction is used.

=== Pre-Version 120, Dec 10, 2012
    Save entire PPR to SIMH.
    Fixup IC after fault to undo auto-advance so that the IC points to
    the faulted instruction.

=== Pre-Version 121, Dec 12, 2012
    Provide the fault register, mode register, and cache mode register.
    Properly handle EIS descriptors in absolute addressing mode.

=== Pre-Version 122, ???
    Cleanup some code duplication in misc.c.
